{"version":3,"sources":["components/SearchPokemon.js","helper/getPokemon.js","components/PokemonGridItem.js","components/PokemonGrid.js","hooks/useFetchPokemon.js","Pokedex.js","index.js"],"names":["SearchPokemon","setPokemon","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","onSubmit","className","type","placeholder","onChange","target","value","id","onClick","getPokemon","pokemon","a","url","encodeURI","fetch","resp","json","data","PokemonGridItem","name","sprites","stats","types","abilities","undefined","cardType","types_array","map","push","src","front_default","alt","front_female","front_shiny","s","i","stat","base_stat","slot","is_hidden","ability","PokemonGrid","loading","state","setState","useEffect","then","setTimeout","useFetchPokemon","Pokedex","pkmn","inferior","superior","numPosibilidades","aleatorio","Math","random","floor","border","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d15ec75.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './css/searchPokemon.css';\r\n\r\nexport const SearchPokemon = ({setPokemon}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 0){\r\n            setPokemon(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n                <label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Name or No.\" \r\n                    onChange={handleInputChange} \r\n                    value={inputValue} \r\n                    id=\"pokemon\"\r\n                />\r\n                </label>\r\n                <button className=\"unit\" type=\"button\" onClick={handleSubmit}></button>\r\n            </div>\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\nSearchPokemon.propTypes = {\r\n    setPokemon: PropTypes.func.isRequired\r\n}\r\n\r\n// SearchPokemon.defaultProps = {\r\n//     inputValue: 'pikachu'\r\n// }","export const getPokemon = async (pokemon) => {\r\n\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${encodeURI(pokemon)}`;\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n\r\n    // console.log(pkmn);\r\n    return data;\r\n}\r\n","import React from 'react';\r\nimport './css/pokemon.css';\r\n\r\nexport const PokemonGridItem = ({id, name, sprites, stats, types, abilities}) => {\r\n\r\n    if (id === undefined) {\r\n        return ''\r\n    }\r\n\r\n    const cardType = `card card--${types[0].type.name}`;\r\n    let types_array = [];\r\n\r\n    types.map((type)=>\r\n      types_array.push(type.type.name)\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <div id=\"cards\">  \r\n\r\n            <figure className={cardType}>\r\n            <div className=\"card__image-container\">\r\n                <img src={sprites.front_default} alt={name} className=\"card__image\"/>\r\n\r\n                {sprites.front_female ? <img src={sprites.front_female} alt={name} className=\"card__image\"/> : ''}\r\n                <img src={sprites.front_shiny} alt={name} className=\"card__image\"/>   \r\n            </div>\r\n            \r\n            <figcaption className=\"card__caption\">\r\n                <h3 className=\"card__name\"> No. {id}</h3>\r\n                <h1 className=\"card__name\">{name}</h1>\r\n                <div className='container'>\r\n                <h3 className=\"card__type\"> {types_array[0]} </h3>\r\n                {types_array[1] ? <h3 className=\"card__type__2\">{types_array[1]}</h3>:''}\r\n                </div>\r\n                <hr className=\"hr_line\" /><hr className=\"hr_line\" />\r\n                <table className=\"card__stats\">\r\n                <tbody>\r\n                {stats.map((s,i)=> {\r\n                    return (<tr key={i}><th className=\"stat_name\">{s.stat.name}</th><td>{s.base_stat}</td></tr>)\r\n                })}\r\n                </tbody>\r\n                </table>\r\n                <div className=\"card__abilities\">\r\n                {abilities.map((a,slot)=> {\r\n                    return (<h4 key={slot} className=\"card__ability\" id=\"ability_cap\">\r\n                            <span className=\"card__label\">{a.is_hidden ? 'Hidden Ability' : 'Ability'}</span>\r\n                            {a.ability.name}\r\n                            </h4>\r\n                        )\r\n                })}\r\n                </div>\r\n            </figcaption>\r\n            </figure>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchPokemon } from '../hooks/useFetchPokemon';\r\nimport {PokemonGridItem} from './PokemonGridItem'\r\nimport './css/searchPokemon.css';\r\n\r\n\r\nexport const PokemonGrid = ({pokemon}) => {\r\n\r\n    const {data, loading} = useFetchPokemon(pokemon);\r\n\r\n    return (\r\n        <>\r\n            {loading && <p className=\"loadingText\">Loading ...</p>}\r\n\r\n            <div>\r\n                <PokemonGridItem key={data.id} {...data}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport {getPokemon} from '../helper/getPokemon';\r\n\r\nexport const useFetchPokemon = (pokemon) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getPokemon(pokemon)\r\n        .then(data => {\r\n\r\n            setTimeout(()=> {\r\n                setState({\r\n                    data,\r\n                    loading: false\r\n                });\r\n            }, 1000);\r\n\r\n            // setState({\r\n            //     data: data,\r\n            //     loading: false\r\n            // });\r\n        });\r\n    },[pokemon]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { SearchPokemon } from './components/SearchPokemon';\r\nimport { PokemonGrid } from './components/PokemonGrid';\r\n\r\nconst Pokedex = () => {\r\n\r\n    function aleatorio(inferior, superior) {\r\n        var numPosibilidades = superior - inferior;\r\n        var aleatorio = Math.random() * (numPosibilidades + 1);\r\n        aleatorio = Math.floor(aleatorio);\r\n        return inferior + aleatorio;\r\n    }\r\n\r\n    const pkmn = aleatorio (1, 898);\r\n\r\n    const [pokemon, setPokemon] = useState(pkmn);\r\n\r\n    return (\r\n        <>\r\n            {/* <h2>Pokedex</h2>\r\n             */}\r\n             <img src=\"https://fontmeme.com/permalink/211023/4cb64e943694981d154ca5e5fe995908.png\" alt=\"fuente-pokemon\" border=\"0\"/>\r\n            <SearchPokemon setPokemon={setPokemon} />\r\n            <PokemonGrid pokemon={pokemon} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pokedex;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport Pokedex from './Pokedex';\n\nReactDOM.render(\n  <Pokedex />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}